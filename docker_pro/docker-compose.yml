version: '3.9'

services:
  fastapi:
    container_name: "fastapi_container"
    build:
      context: ..
      dockerfile: docker_pro/fastapi.Dockerfile
    environment:
      - MODULE_NAME=main
      - VARIABLE_NAME=app
      - ASGI_SERVER=uvicorn
      - UVICORN_CMD="uvicorn main:app --host 0.0.0.0 --port 80 --workers 4"
      - GUNICORN_CMD="gunicorn -k uvicorn.workers.UvicornWorker -w 4 main:app -b 0.0.0.0:80"
    restart: always

  postgres:
    build:
      context: ..
      dockerfile: docker_pro/postgres.Dockerfile
    container_name: postgres_container
    restart: always
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    build:
      context: ..
      dockerfile: docker_pro/pgAdmin.Dockerfile
    container_name: pgadmin_container
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_LISTEN_PORT=80
    volumes:
      - pgadmin_data:/var/lib/pgadmin


  redis:
    build:
      context: ..
      dockerfile: docker_pro/redis.Dockerfile
    container_name: redis_container
    restart: always
    volumes:
      - redis_data:/data

  rabbitmq:
    build:
      context: ..
      dockerfile: docker_pro/rabbitmq.Dockerfile
    container_name: rabbitmq_container
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: rabbitmq
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  zookeeper:
    build:
      context: ..
      dockerfile: docker_pro/zookeeper.Dockerfile
    container_name: zookeeper_container
    networks:
      - kafka-net

  kafka:
    build:
      context: ..
      dockerfile: docker_pro/kafka.Dockerfile
    container_name: kafka_container
    #    expose:
    #      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_CREATE_TOPICS: "your_topic:1:1"
    volumes:
      - docker_sock:/var/run/docker.sock
    networks:
      - kafka-net


  nginx:
    build:
      context: ..
      dockerfile: docker_pro/nginx.Dockerfile
    container_name: nginx_container
    ports:
      # Port FastAPI
      - "8080:80"
      # Port Postgresql
      - "5454:5454"
      # Port pgAdmin
      - "5050:5050"
      # Port Redis
      - "6379:6379"
      # RabbitMQ default port
      - "5672:5672"
      # RabbitMQ management plugin web interface
      - "15672:15672"
    restart: always

volumes:
  postgres_data:
  pgadmin_data:
  nginx_data:
  redis_data:
  rabbitmq_data:
  docker_sock:

networks:
  kafka-net:
    driver: bridge